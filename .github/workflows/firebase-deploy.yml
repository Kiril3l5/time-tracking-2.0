name: Firebase Deployment

# This workflow handles both production deployments and pull request preview deployments
# - For main branch pushes: Deploys to production Firebase hosting
# - For feature branch pushes: Only runs linting and tests (no deployment)
# - For pull requests: Creates preview deployments with PR-specific channels

on:
  push:
    branches: 
      - "main"
      - "feature/**"
      - "fix/**"
      - "bugfix/**"
  pull_request:
    branches: ["main"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Fix TypeScript configuration for tests
        run: |
          echo "Updating tsconfig.json to include test files..."
          sed -i 's/"exclude": \[\s*"node_modules",\s*"\*\*\/\*\.spec\.ts",\s*"\*\*\/\*\.test\.ts",\s*"\*\*\/\*\.test\.tsx"\s*\]/"exclude": \["node_modules"\]/' tsconfig.json
          sed -i 's/"include": \[\s*"packages\/\*\/src\/\*\*\/\*\.ts",\s*"packages\/\*\/src\/\*\*\/\*\.tsx"\s*\]/"include": \["packages\/\*\/src\/\*\*\/\*\.ts","packages\/\*\/src\/\*\*\/\*\.tsx","packages\/\*\/src\/\*\*\/\*\.test\.ts","packages\/\*\/src\/\*\*\/\*\.test\.tsx","packages\/\*\/tests\/\*\*\/\*\.ts","packages\/\*\/tests\/\*\*\/\*\.tsx","packages\/\*\/src\/tests\/\*\*\/\*\.ts","packages\/\*\/src\/tests\/\*\*\/\*\.tsx"\]/' tsconfig.json
          cat tsconfig.json
      
      - name: Lint
        run: pnpm run lint
      
      - name: Test
        run: pnpm run test
      
      # For feature branches, we only want to validate with lint and tests
      # No need to build or deploy since that's done locally by improved-workflow.js
      - name: Feature Branch Validation
        if: github.event_name == 'push' && (startsWith(github.ref, 'refs/heads/feature/') || startsWith(github.ref, 'refs/heads/fix/') || startsWith(github.ref, 'refs/heads/bugfix/'))
        run: |
          echo "Feature branch validation complete! âœ…"
          echo "This is a feature branch push, so we're only running linting and tests."
          echo "You've already deployed to Firebase locally using improved-workflow.js."
      
      # Only perform builds and deployments for main branch and PRs
      - name: Project Cleanup
        if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
        run: |
          echo "Performing project cleanup before build..."
          # Set CI environment variable to ensure proper cleanup behavior
          export CI=true
          # On CI we use the node script which will select the right platform script
          pnpm run cleanup
          echo "Cleanup completed."
      
      - name: Build packages
        if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
        env:
          VITE_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
          VITE_USE_FIREBASE_EMULATOR: "false"
        run: |
          echo "Building packages..."
          # Set NODE_ENV for proper DEV variable
          export NODE_ENV=production
          # Use the script from package.json
          pnpm run build:all
      
      # Authentication for any GitHub action (both main branch and PRs)
      - name: Authenticate to Google Cloud
        if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
        id: auth
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: 'projects/266526530869/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
          service_account: 'github-actions-sa@autonomy-heroes.iam.gserviceaccount.com'
      
      # Production deployment - only runs when pushing to main branch
      - name: Deploy to Firebase Hosting and Rules
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          VITE_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
          VITE_USE_FIREBASE_EMULATOR: "false"
        run: |
          pnpm add -g firebase-tools
          firebase deploy --only hosting,firestore:rules
      
      # Preview deployment for pull requests - using the same authentication
      # Creates a PR-specific channel that can be used for review
      - name: Deploy PR Preview
        if: github.event_name == 'pull_request'
        env:
          VITE_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
          VITE_USE_FIREBASE_EMULATOR: "false"
        run: |
          pnpm add -g firebase-tools
          firebase hosting:channel:deploy pr-${{ github.event.number }} --json