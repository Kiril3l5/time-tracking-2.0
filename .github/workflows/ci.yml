name: CI/CD Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - name: Generate lockfile key
        id: lockfile-key
        run: echo "hash=$(sha256sum pnpm-lock.yaml | cut -d ' ' -f 1)" >> $GITHUB_OUTPUT
      
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-pnpm-${{ steps.lockfile-key.outputs.hash }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      
      - name: Create .env file
        run: |
          echo "VITE_FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}" > .env
          echo "VITE_FIREBASE_AUTH_DOMAIN=autonomy-heroes.firebaseapp.com" >> .env
          echo "VITE_FIREBASE_PROJECT_ID=autonomy-heroes" >> .env
          echo "VITE_FIREBASE_STORAGE_BUCKET=autonomy-heroes.appspot.com" >> .env
          echo "VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}" >> .env
          echo "VITE_FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }}" >> .env
          echo "VITE_FIREBASE_MEASUREMENT_ID=${{ secrets.FIREBASE_MEASUREMENT_ID }}" >> .env
          echo "DEV=true" >> .env
          
          # Copy to all packages
          cp .env packages/common/
          cp .env packages/admin/
          cp .env packages/hours/
      
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
      
      - name: Lint check (skipped for now)
        run: echo "Linting is currently skipped"
      
      - name: Test check (skipped for now)
        run: echo "Testing is currently skipped"
      
      - name: Build packages
        run: |
          echo "Building packages..."
          # Set NODE_ENV for proper DEV variable
          export NODE_ENV=production
          # Use the script from package.json
          pnpm run build:all
      
      # Authenticate with Google Cloud for main branch deployment
      - name: Authenticate to Google Cloud
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        id: auth
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: 'projects/266526530869/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
          service_account: 'github-actions-sa@autonomy-heroes.iam.gserviceaccount.com'
      
      # Deploy to production when pushing to main
      - name: Deploy to Firebase Hosting
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          npm install -g firebase-tools
          firebase deploy --only hosting
      
      # Deploy PR previews
      - name: Deploy PR Preview
        if: github.event_name == 'pull_request'
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          projectId: 'autonomy-heroes'
          channelId: 'pr-${{ github.event.number }}'